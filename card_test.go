package main

import (
	"github.com/stretchr/testify/assert"
	"testing"
)

func Test_newShuffledDeck(t *testing.T) {
	deck := newShuffledDeck()

	assert.Contains(t, deck, card{SuitHearts, ValueTwo})
	assert.Contains(t, deck, card{SuitHearts, ValueThree})
	assert.Contains(t, deck, card{SuitHearts, ValueFour})
	assert.Contains(t, deck, card{SuitHearts, ValueFive})
	assert.Contains(t, deck, card{SuitHearts, ValueSix})
	assert.Contains(t, deck, card{SuitHearts, ValueSeven})
	assert.Contains(t, deck, card{SuitHearts, ValueEight})
	assert.Contains(t, deck, card{SuitHearts, ValueNine})
	assert.Contains(t, deck, card{SuitHearts, ValueTen})
	assert.Contains(t, deck, card{SuitHearts, ValueJack})
	assert.Contains(t, deck, card{SuitHearts, ValueQueen})
	assert.Contains(t, deck, card{SuitHearts, ValueKing})
	assert.Contains(t, deck, card{SuitHearts, ValueAce})

	assert.NotContains(t, deck, card{SuitDiamonds, ValueTwo})
	assert.Contains(t, deck, card{SuitDiamonds, ValueThree})
	assert.Contains(t, deck, card{SuitDiamonds, ValueFour})
	assert.Contains(t, deck, card{SuitDiamonds, ValueFive})
	assert.Contains(t, deck, card{SuitDiamonds, ValueSix})
	assert.Contains(t, deck, card{SuitDiamonds, ValueSeven})
	assert.Contains(t, deck, card{SuitDiamonds, ValueEight})
	assert.Contains(t, deck, card{SuitDiamonds, ValueNine})
	assert.Contains(t, deck, card{SuitDiamonds, ValueTen})
	assert.Contains(t, deck, card{SuitDiamonds, ValueJack})
	assert.Contains(t, deck, card{SuitDiamonds, ValueQueen})
	assert.Contains(t, deck, card{SuitDiamonds, ValueKing})
	assert.Contains(t, deck, card{SuitDiamonds, ValueAce})

	assert.Contains(t, deck, card{SuitClubs, ValueTwo})
	assert.Contains(t, deck, card{SuitClubs, ValueThree})
	assert.Contains(t, deck, card{SuitClubs, ValueFour})
	assert.Contains(t, deck, card{SuitClubs, ValueFive})
	assert.Contains(t, deck, card{SuitClubs, ValueSix})
	assert.Contains(t, deck, card{SuitClubs, ValueSeven})
	assert.Contains(t, deck, card{SuitClubs, ValueEight})
	assert.Contains(t, deck, card{SuitClubs, ValueNine})
	assert.Contains(t, deck, card{SuitClubs, ValueTen})
	assert.Contains(t, deck, card{SuitClubs, ValueJack})
	assert.Contains(t, deck, card{SuitClubs, ValueQueen})
	assert.Contains(t, deck, card{SuitClubs, ValueKing})
	assert.Contains(t, deck, card{SuitClubs, ValueAce})

	assert.Contains(t, deck, card{SuitSpades, ValueTwo})
	assert.Contains(t, deck, card{SuitSpades, ValueThree})
	assert.Contains(t, deck, card{SuitSpades, ValueFour})
	assert.Contains(t, deck, card{SuitSpades, ValueFive})
	assert.Contains(t, deck, card{SuitSpades, ValueSix})
	assert.Contains(t, deck, card{SuitSpades, ValueSeven})
	assert.Contains(t, deck, card{SuitSpades, ValueEight})
	assert.Contains(t, deck, card{SuitSpades, ValueNine})
	assert.Contains(t, deck, card{SuitSpades, ValueTen})
	assert.Contains(t, deck, card{SuitSpades, ValueJack})
	assert.Contains(t, deck, card{SuitSpades, ValueQueen})
	assert.Contains(t, deck, card{SuitSpades, ValueKing})
	assert.Contains(t, deck, card{SuitSpades, ValueAce})
}
